---
import { plainify } from "@lib/textConverter";
import Footer from "@components/base/Footer.astro";
import Header from "@components/base/Header.astro";
import ObserverScript from "@components/base/ObserverScript.astro";
import "@/styles/main.scss";
import { ClientRouter } from "astro:transitions";
import Background from "@/components/base/Background.astro";
import { Tooltips } from "astro-tooltips";

// types for frontmatters
export interface Props {
  title?: string;
  description?: string | null;
  image?: string;
  noindex?: boolean;
  canonical?: string;
}

const { title, description, image, noindex, canonical } = Astro.props;

const siteTitle = "The Elsebeneath";
const siteDescription = "The Elsebeneath";
const siteImage = "/elsebeneath.webp";
const siteAuthor = "Juno Threadborne";
const baseUrl = "https://elsebeneath.online";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- CRITICAL: CONSENT MODE MUST BE ABSOLUTELY FIRST -->
    <script>
      // Initialize dataLayer and gtag function IMMEDIATELY
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        window.dataLayer.push(arguments);
      }

      // Check for existing consent preference
      let savedConsent = null;
      try {
        savedConsent = localStorage.getItem("cookie_consent");
      } catch (e) {
        console.log("localStorage not available");
      }

      // Set default consent state based on saved preference or deny all
      if (savedConsent === "yes") {
        gtag("consent", "default", {
          ad_storage: "granted",
          ad_user_data: "granted",
          ad_personalization: "granted",
          analytics_storage: "granted",
        });
      } else {
        gtag("consent", "default", {
          ad_storage: "denied",
          ad_user_data: "denied",
          ad_personalization: "denied",
          analytics_storage: "denied",
          wait_for_update: 500,
        });
      }
    </script>

    <!-- Content Security Policy - Must be early but after consent setup -->
    <meta
      http-equiv="Content-Security-Policy"
      content="default-src 'self' https://elsebeneath.online; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://elsebeneath.online https://www.googletagmanager.com https://www.clarity.ms https://scripts.clarity.ms https://cloudflareinsights.com https://static.cloudflareinsights.com https://cdn.jsdelivr.net https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://elsebeneath.online https://cdn.jsdelivr.net https://fonts.googleapis.com; img-src 'self' data: https: https://elsebeneath.online; connect-src 'self' https://elsebeneath.online https://www.google-analytics.com https://analytics.google.com https://www.clarity.ms https://cloudflareinsights.com https://www.googletagmanager.com https://stats.g.doubleclick.net; font-src 'self' https://elsebeneath.online https://fonts.gstatic.com https://cdn.jsdelivr.net; object-src 'none'; base-uri 'self'; form-action 'self' https://elsebeneath.online; frame-src https://www.googletagmanager.com https://docs.google.com https://elsebeneath.online;"
    />

    <!-- Microsoft Clarity - Now consent-aware -->
    <script type="text/javascript">
      (function (c, l, a, r, i, t, y) {
        c[a] =
          c[a] ||
          function () {
            (c[a].q = c[a].q || []).push(arguments);
          };
        t = l.createElement(r);
        t.async = 1;
        t.src = "https://www.clarity.ms/tag/" + i;
        y = l.getElementsByTagName(r)[0];
        y.parentNode.insertBefore(t, y);
      })(window, document, "clarity", "script", "slp5qbdma3");
    </script>

    <!-- Google Tag Manager - AFTER consent setup -->
    <script>
      (function (w, d, s, l, i) {
        w[l] = w[l] || [];
        w[l].push({ "gtm.start": new Date().getTime(), event: "gtm.js" });
        var f = d.getElementsByTagName(s)[0],
          j = d.createElement(s),
          dl = l != "dataLayer" ? "&l=" + l : "";
        j.async = true;
        j.src = "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
        f.parentNode.insertBefore(j, f);
      })(window, document, "script", "dataLayer", "GTM-P66KZGWV");
    </script>
    <!-- End Google Tag Manager -->

    <!-- favicon -->
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/favicon/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/favicon/favicon-32x32.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/favicon/favicon-16x16.png"
    />

    <link rel="sitemap" href="/sitemap-index.xml" />

    <meta name="theme-name" content="pages" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#fff"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#000"
    />
    <meta name="generator" content={Astro.generator} />
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=5"
    />

    <title>
      {plainify(title ? title : siteTitle)}
    </title>

    {canonical && <link rel="canonical" href={canonical} item-prop="url" />}
    {noindex && <meta name="robots" content="noindex,nofollow" />}

    <meta
      name="description"
      content={plainify(description ? description : siteDescription)}
    />
    <meta name="author" content={siteAuthor} />
    <meta property="og:title" content={plainify(title ? title : siteTitle)} />
    <meta
      property="og:description"
      content={plainify(description ? description : siteDescription)}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`${baseUrl}/${Astro.url.pathname.replace("/", "")}`}
    />
    <meta
      property="og:image"
      content={`${baseUrl}${image ? image : siteImage}`}
    />

    <meta name="twitter:title" content={plainify(title ? title : siteTitle)} />
    <meta
      name="twitter:description"
      content={plainify(description ? description : siteDescription)}
    />
    <meta
      name="twitter:image"
      content={`${baseUrl}${image ? image : siteImage}`}
    />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- Katex -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/katex.min.css"
      integrity="sha384-zh0CIslj+VczCZtlzBcjt5ppRcsAmDnRem7ESsYwWwg3m/OaJ2l4x7YBZl9Kxxib"
      crossorigin="anonymous"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Quicksand:400,700"
      rel="stylesheet"
      type="text/css"
    />
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/katex.min.js"
      integrity="sha384-Rma6DA2IPUwhNxmrB/7S3Tno0YY7sFu9WSYMCuulLhIqYSGZ2gKCJWIqhBWqMQfh"
      crossorigin="anonymous"></script>
    <script
      defer
      src="https://cdn.jsdelivr.net/npm/katex@0.16.21/dist/contrib/auto-render.min.js"
      integrity="sha384-hCXGrW6PitJEwbkoStFjeJxv+fSOOQKOPbJxSfM6G5sWZjAyWhXiTIIAmQqnlLlh"
      crossorigin="anonymous"
      onload="renderMathInElement(document.body);"></script>
    <!-- https://docs.astro.build/en/guides/view-transitions -->
    <ClientRouter fallback="swap" />
    <Tooltips interactive={false} delay={[333, 0]} />
  </head>
  <body>
    <div
      id="cookie-banner"
      class="fixed bottom-6 left-1/2 z-50 w-[90%] max-w-sm -translate-x-1/2 rounded-xl border border-gray-300 bg-white p-4 text-center shadow-lg dark:border-gray-700 dark:bg-gray-800"
      style="display: none;"
    >
      <p class="text-sm text-gray-800 dark:text-gray-100">
        We use cookies to understand how people use the site. OK?
      </p>
      <div class="mt-3 flex justify-center gap-3">
        <button
          id="cookie-accept"
          class="rounded-lg bg-purple-600 px-4 py-1.5 text-sm font-medium text-white shadow hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-400"
        >
          Accept
        </button>
        <button
          id="cookie-reject"
          class="rounded-lg bg-gray-200 px-4 py-1.5 text-sm font-medium text-gray-700 shadow hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-400 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600"
        >
          Reject
        </button>
      </div>
    </div>

    <!-- Google Tag Manager (noscript) -->
    <noscript
      ><iframe
        src="https://www.googletagmanager.com/ns.html?id=GTM-P66KZGWV"
        height="0"
        width="0"
        style="display:none;visibility:hidden"></iframe></noscript
    >
    <!-- End Google Tag Manager (noscript) -->
    <Background />
    <Header />
    <main id="main-content" class="flex-1">
      <slot />
    </main>
    <Footer />
    <!-- <ObserverScript /> -->

    <!-- CONSENT BANNER SCRIPT -->
    <script>
      const banner = document.getElementById("cookie-banner");
      const accept = document.getElementById("cookie-accept");
      const reject = document.getElementById("cookie-reject");

      function updateConsent(granted) {
        // Save preference
        localStorage.setItem("cookie_consent", granted ? "yes" : "no");

        // Hide banner
        banner.style.display = "none";

        if (granted) {
          // Fire GTM only on accept
          window.dataLayer = window.dataLayer || [];
          window.dataLayer.push({
            event: "user_accepted_cookies",
          });

          // Also update consent mode
          if (typeof gtag !== "undefined") {
            gtag("consent", "update", {
              ad_storage: "granted",
              ad_user_data: "granted",
              ad_personalization: "granted",
              analytics_storage: "granted",
            });
          }
        }
      }

      // Show banner only if no saved consent
      const savedConsent = localStorage.getItem("cookie_consent") === "yes";
      if (!savedConsent) {
        banner.style.display = "block";
      }

      // Wire up button handlers
      if (accept) accept.onclick = () => updateConsent(true);
      if (reject) reject.onclick = () => updateConsent(false);
    </script>
  </body>
</html>
